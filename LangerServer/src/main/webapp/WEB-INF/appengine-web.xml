<?xml version="1.0" encoding="utf-8"?>
<appengine-web-app xmlns="http://appengine.google.com/ns/1.0">
  <application>hll-registration</application>
  <version>8</version>
  <runtime>java8</runtime>

  <!--
    Allows App Engine to send multiple requests to one instance in parallel:
  -->
  <threadsafe>true</threadsafe>

  <!-- Configure java.util.logging -->
  <system-properties>
    <property name="java.util.logging.config.file" value="WEB-INF/logging.properties"/>
  </system-properties>

  <automatic-scaling>
    <max-instances>1</max-instances>
    <min-instances>1</min-instances>
    <max-concurrent-requests>80</max-concurrent-requests>
  </automatic-scaling>


  <env-variables>
    <env-var name="MAILJET_API_KEY" value="e4c9055e273879c270bd89147898aca8" />
    <env-var name="MAILJET_SECRET_KEY" value="6475cd1942effc4cfd8c8b676287a7b5" />
  </env-variables>

  <!--
    HTTP Sessions are disabled by default. To enable HTTP sessions specify:

      <sessions-enabled>true</sessions-enabled>

    It's possible to reduce request latency by configuring your application to
    asynchronously write HTTP session data to the datastore:

      <async-session-persistence enabled="true" />

    With this feature enabled, there is a very small chance your app will see
    stale session data. For details, see
    http://code.google.com/appengine/docs/java/config/appconfig.html#Enabling_Sessions
  -->

  <static-files>
    <include path="/static/*.js">
      <http-header name="Content-Type" value="application/javascript; charset=UTF-8" />
    </include>
    <include path="/static/*.css">
      <http-header name="Content-Type" value="text/css; charset=UTF-8" />
    </include>
  </static-files>

</appengine-web-app>